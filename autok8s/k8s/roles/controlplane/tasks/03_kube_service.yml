

# - name: Creates directory
#   file:
#     path: "{{item}}"
#     state: directory
#     owner: root
#     group: root
#     mode: '0700'
#   loop:
#     - /var/lib/kubernetes/
#     - /etc/kubernetes/
#     - /etc/kubernetes/config/


# - name: Copy a file to kube-scheduler.yaml
#   ansible.builtin.copy:
#     src: kube-scheduler.yaml
#     dest: /etc/kubernetes/config/kube-scheduler.yaml

# - name: Template a file to encryption-config.yaml
#   ansible.builtin.template:
#     src: encryption-config.yaml.j2
#     dest: /etc/kubernetes/encryption-config.yaml
##

# - name: Template a file to kube-apiserver.service
#   ansible.builtin.template:
#     src: kube-apiserver.service.j2
#     dest: /etc/systemd/system/kube-apiserver.service
#   register: touch_kube_apiserver_service

# - name: Enable service kube-apiserver
#   ansible.builtin.systemd:
#     name: kube-apiserver
#     enabled: true
#     daemon_reload: true
#     state: restarted
#   when: touch_kube_apiserver_service.changed

# - name: Template a file to kube-controller-manager.service
#   ansible.builtin.template:
#     src: kube-controller-manager.service.j2
#     dest: /etc/systemd/system/kube-controller-manager.service
#   register: touch_kube_controller_manager_service

# - name: Enable service kube-controller-manager
#   ansible.builtin.systemd:
#     name: kube-controller-manager
#     enabled: true
#     daemon_reload: true
#     state: restarted
#   when: touch_kube_controller_manager_service.changed

# - name: Copy a file to kube-scheduler.service
#   ansible.builtin.copy:
#     src: kube-scheduler.service
#     dest: /etc/systemd/system/kube-scheduler.service
#   register: touch_kube_scheduler_service

# - name: Enable service kube-scheduler
#   ansible.builtin.systemd:
#     name: kube-scheduler
#     enabled: true
#     daemon_reload: true
#     state: restarted
#   when: touch_kube_scheduler_service.changed


# - name: cluster - test
#   ansible.builtin.shell: kubectl cluster-info
#   register: cluster_output

# - name: debug cluster
#   debug:
#     msg: "{{cluster_output.stdout_lines}}"
