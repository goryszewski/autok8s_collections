---
# tasks file for etcd
- name: Download etcd
  ansible.builtin.get_url:
    url: "https://github.com/etcd-io/etcd/releases/download/{{etcd['version']}}/etcd-{{etcd['version']}}-{{etcd['platform']}}.tar.gz"
    dest: /tmp
    mode: 'u=rwx,g=rx,o=rx'
    checksum: sha256:https://github.com/etcd-io/etcd/releases/download/{{etcd['version']}}/SHA256SUMS

- name: unarchive etcd
  ansible.builtin.unarchive:
    src: /tmp/etcd-{{etcd['version']}}-{{etcd['platform']}}.tar.gz
    dest: /tmp
    remote_src: yes

- name: Copy etcd
  ansible.builtin.copy:
    src: /tmp/etcd-{{etcd['version']}}-{{etcd['platform']}}/{{item}}
    dest: /usr/local/bin
    mode: '0555'
    remote_src: yes
  loop:
   - etcdctl
   - etcd

- name: Creates directory /var/lib/etcd
  file:
    path: /var/lib/etcd
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Creates directory /etc/etcd
  file:
    path: /etc/etcd
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Template a file to etcd.service
  ansible.builtin.template:
    src: etcd.service.j2
    dest: /etc/systemd/system/etcd.service
  notify: Restart-service-etcd

- name: Enable service
  ansible.builtin.systemd:
    name: etcd
    enabled: true
    daemon_reload: true
    state: started

- name: "[{{hostname}}] DEBUG ETCD"
  include_tasks:
    file: ./_share/_run_debug.yml
  vars:
    _CMD: "{{item}}"
    _NAME: "ETCDTOOL"
  loop:
  - "ETCDCTL_API=3 etcdctl --write-out=table --endpoints={{etcd['members']}} member list  --cacert=/etc/etcd/ssl/ETCD_CA.pem --cert=/etc/etcd/ssl/check_health.pem --key=/etc/etcd/ssl/check_health.key"
  - "ETCDCTL_API=3 etcdctl --write-out=table --endpoints={{etcd['members']}} endpoint status  --cacert=/etc/etcd/ssl/ETCD_CA.pem --cert=/etc/etcd/ssl/check_health.pem --key=/etc/etcd/ssl/check_health.key"
  - "ETCDCTL_API=3 etcdctl --write-out=table --endpoints={{etcd['members']}} endpoint health  --cacert=/etc/etcd/ssl/ETCD_CA.pem --cert=/etc/etcd/ssl/check_health.pem --key=/etc/etcd/ssl/check_health.key"

- name: script backup
  ansible.builtin.template:
    src: backup.sh
    dest: /tmp/backup.sh
    mode: u=rwx,g=rx,o=rx

- name: backup cron job
  ansible.builtin.cron:
    name: "Run backup"
    minute: "*/5"
    job: '/tmp/backup.sh'
