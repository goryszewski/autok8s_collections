---
- name: Module Load for containerd
  copy:
    content: |
      overlay
      br_netfilter
      ip_conntrack
    dest: /etc/modules-load.d/containerd.conf

- name: modprobe
  modprobe:
    name: "{{item}}"
    state: present
  loop:
    - ip_conntrack
    - br_netfilter
    - overlay

- name: sysctl for k8s-cri
  copy:
    content: |
      net.bridge.bridge-nf-call-iptables = 1
      net.ipv4.ip_forward = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      net.netfilter.nf_conntrack_max = 262144
    dest: /etc/sysctl.d/99-kubernetes-cri.conf
  notify:
    - sysctl--system

- name: Add repositories key docker
  ansible.builtin.apt_key:
    url: "https://download.docker.com/linux/debian/gpg"
    state: present

- name: Add repositories docker
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/debian buster stable"
    state: present
    filename: "docker"

- name: Add repositories key gvisor
  ansible.builtin.apt_key:
    url: "https://gvisor.dev/archive.key"
    state: present

- name: Add repositories gvisor
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64] https://storage.googleapis.com/gvisor/releases {{ version['runsc'] }} main"
    state: present
    filename: "gvisor"

- name: Add repositories key k8s
  ansible.builtin.apt_key:
    url: "https://pkgs.k8s.io/core:/stable:/v1.29/deb/Release.key"
    state: present

- name: Add repositories k8s
  ansible.builtin.apt_repository:
    repo: "deb https://pkgs.k8s.io/core:/stable:/v1.29/deb/ /"
    state: present
    filename: "k8s"

- name: containerd - Update the repository cache and install containerd
  ansible.builtin.apt:
    state: latest
    update_cache: true
    allow_change_held_packages: true
    pkg:
      - containerd.io={{ version['containerd'] }}

- name: Proxy repo
  when: global_repo is defined
  block:
    - name: Containerd - Creates directory loop
      ansible.builtin.file:
        path: "/etc/containerd/certs.d/{{ item }}/"
        state: directory
        recurse: true
      loop:
        - registry.k8s.io
        - docker.io
        - repo.mgmt.autok8s.ext:5000

    - name: repo proxy loop
      ansible.builtin.template:
        src: "{{ item }}"
        dest: "/etc/containerd/certs.d/{{ item }}/hosts.toml"
      notify:
        - Restart-service-containerd
      loop:
        - registry.k8s.io
        - docker.io

    - name: repo.mgmt.autok8s.ext
      ansible.builtin.template:
        src: internal.toml
        dest: "/etc/containerd/certs.d/repo.mgmt.autok8s.ext:5000/hosts.toml"
      notify:
        - Restart-service-containerd

- name: gVisor - Install sunsc
  ansible.builtin.apt:
    update_cache: true
    allow_change_held_packages: true
    pkg:
      - runsc={{ version['runsc'] }}.0

- name: gVisor - config
  ansible.builtin.copy:
    src: config.toml
    dest: "/etc/containerd/config.toml"
  notify:
    - Restart-service-containerd

- name: Force all notified handlers to run at this point, not waiting for normal sync points
  ansible.builtin.meta: flush_handlers
  # https://docs.ansible.com/ansible/latest/collections/ansible/builtin/meta_module.html#meta-module

- name: Install crictl Software
  ansible.builtin.apt:
    pkg:
      - cri-tools

- name: crictl - crictl.yaml
  ansible.builtin.copy:
    src: crictl.yaml
    dest: "/etc/crictl.yaml"
