# kubectl create namespace argocd
# kubectl apply -n argocd -f
#  ~/Downloads/argocd-linux-amd64 admin initial-password -n argocd
# argocd app create test_argocd --repo git@github.com:goryszewski/test_argocd.git --path test_argocd --dest-namespace default

- name: Copy argocd_pre.yml
  ansible.builtin.copy:
    src: argocd_pre.yml
    dest: /etc/kubernetes/config/argocd_pre.yml
    owner: root
    group: root
    mode: '0644'
    backup: yes
  register: touch_argocd_yml

- name: kubectl apply argocd_pre.yml
  ansible.builtin.command: kubectl apply -n argocd  -f /etc/kubernetes/config/argocd_pre.yml
  when: touch_argocd_yml.changed
  ignore_errors: true
  run_once: true

- name: Copy argocd.yml
  ansible.builtin.copy:
    src: argocd.yml
    dest: /etc/kubernetes/config/argocd.yml
    owner: root
    group: root
    mode: '0644'
    backup: yes
  register: touch_argocd_yml

- name: kubectl apply argocd.yml
  ansible.builtin.command: kubectl apply -n argocd  -f /etc/kubernetes/config/argocd.yml
  when: touch_argocd_yml.changed
  ignore_errors: true
  run_once: true

- name: "[Cluster] - Wait for crds applications.argoproj.io"
  ansible.builtin.command: kubectl get customresourceDefinition applications.argoproj.io
  register: register_result_crds
  until: register_result_crds.rc == 0
  retries: 20
  delay: 5

###

- name: watch is all running
  ansible.builtin.shell: kubectl get pods -n argocd -o=jsonpath="{ range .items[*] }{.status.phase}{'\n'}{end} " | grep -v -E '^$'  | grep -i -v running -c
  register: result
  until: result.stdout == '1'
  retries: 20
  delay: 10

###

- name: Download argoCD
  ansible.builtin.get_url:
    url: "{{item}}"
    dest: /tmp
    mode: 'u=rwx,g=rx,o=rx'
  loop:
    - https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
# DOTO SHA

- name: Copy heargoCDlm
  ansible.builtin.copy:
    src: /tmp/argocd-linux-amd64
    dest: /usr/local/bin/argocd
    mode: '0555'
    remote_src: yes

- name: argoCD password
  ansible.builtin.shell: argocd admin initial-password -n argocd
  register: outputArgoCD

- name: output-argoCD debug
  ansible.builtin.debug:
    var: outputArgoCD.stdout
