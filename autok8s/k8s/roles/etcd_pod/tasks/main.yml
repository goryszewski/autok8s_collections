---
- name: "[ETCD POD] - Download etcd"
  ansible.builtin.get_url:
    url: "https://github.com/etcd-io/etcd/releases/download/{{etcd['version']}}/etcd-{{etcd['version']}}-{{etcd['platform']}}.tar.gz"
    dest: /tmp
    mode: 'u=rwx,g=rx,o=rx'
    checksum: sha256:https://github.com/etcd-io/etcd/releases/download/{{etcd['version']}}/SHA256SUMS

- name: "[ETCD POD] - unarchive etcd"
  ansible.builtin.unarchive:
    src: /tmp/etcd-{{ etcd['version'] }}-{{ etcd['platform'] }}.tar.gz
    dest: /tmp
    remote_src: yes

- name: "[ETCD POD] - Copy etcd"
  ansible.builtin.copy:
    src: /tmp/etcd-{{ etcd['version'] }}-{{ etcd['platform'] }}/{{ item }}
    dest: /usr/local/bin
    mode: '0555'
    remote_src: yes
  loop:
   - etcdctl
   - etcd

- name: "[ETCD POD] - Creates directory /etc/kubernetes/manifests"
  ansible.builtin.file:
    path: "/etc/kubernetes/manifests"
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: "[ETCD POD] - Creates directory /etc/etcd"
  ansible.builtin.file:
    path: /etc/etcd
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: "[ETCD POD] - Manifest ETCD"
  ansible.builtin.template:
    src: manifest.yml.j2
    dest: /etc/kubernetes/manifests/etcd.yml

- name: "[ETCD POD] - Wait for ETCD Pod is UP"
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}:2379/version"
    return_content: true
    ca_path: "/etc/etcd/ssl/ETCD_CA.pem"
    client_cert: "/etc/etcd/ssl/check_health.pem"
    client_key: "/etc/etcd/ssl/check_health.key"
    validate_certs: false
  register: register_result_etcd
  until: register_result_etcd.status == 200
  retries: 20
  delay: 5

- name: "[ETCD POD][{{ hostname }}] - DEBUG ETCD"
  ansible.builtin.include_tasks:
    file: ./_share/_run_debug.yml
  vars:
    _CMD: "ETCDCTL_API=3 etcdctl --write-out=table --endpoints={{ etcd['members'] }} {{ item }} --cacert=/etc/etcd/ssl/ETCD_CA.pem --cert=/etc/etcd/ssl/check_health.pem --key=/etc/etcd/ssl/check_health.key"
    _NAME: "ETCDTOOL"
  loop:
  - " member list"
  - " endpoint status"
  - " endpoint health"
