---
# tasks file for kube-apiserver
- name: Creates directory
  file:
    path: "/etc/kubernetes/config"
    state: directory
    owner: root
    group: root
    mode: '0700'

# tasks file for kube-apiserver
- name: Creates directory
  file:
    path: "/etc/kubernetes/manifests"
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: Manifest kube-apiserver
  ansible.builtin.template:
    src: manifest.yml.j2
    dest: /etc/kubernetes/manifests/kube-apiserver.yml
  notify: Restart-service-kubelet

- name: Template a file to encryption-config.yaml
  ansible.builtin.template:
    src: encryption-config.yaml.j2
    dest: /etc/kubernetes/pki/encryption-config.yaml
  notify: Restart-service-kubelet

- name: "Wait for kube-apiserver Pod is UP"
  ansible.builtin.uri:
    url: "https://{{ inventory_hostname }}:6443/version"
    return_content: true
    validate_certs: false
  register: register_result_kube_apiserver
  until: register_result_kube_apiserver.status == 200
  retries: 20
  delay: 5

- name: Download file kubectl
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/release/v{{ k8s_version }}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/
    mode: "u=rwx,g=rx,o=rx"
    checksum: sha256:https://dl.k8s.io/release/v{{ k8s_version }}/bin/linux/amd64/kubectl.sha256

- name: Creates directory
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: "0700"
  loop:
    - /etc/kubernetes/config/.kube

- name: "KubeConfig Admin"
  ansible.builtin.include_tasks:
    file: ./_share/_.kubeconfig.yml
  vars:
    _name: "{{ element._name }}"
    _crt: "{{ element._crt }}"
    _IP: "{{ KUBERNETES_PUBLIC_ADDRESS }}"
    _path: "/root/.kube/config"
  loop:
    - { _name: "admin", _crt: "admin" }
  loop_control:
    loop_var: element
