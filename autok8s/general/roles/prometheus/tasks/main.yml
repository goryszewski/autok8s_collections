---

- name: Creates directory
  file:
    path: "{{CERT_PATH}}"
    state: directory
    recurse: yes

- name: Download file kubectl
  ansible.builtin.get_url:
    url: "https://dl.k8s.io/release/v{{k8s_version}}/bin/linux/amd64/kubectl"
    dest: /usr/local/bin/
    mode: 'u=rwx,g=rx,o=rx'
    checksum: sha256:https://dl.k8s.io/release/v{{k8s_version}}/bin/linux/amd64/kubectl.sha256

- name: "KubeConfig monit"
  include_tasks:
    file: ./_share/_.kubeconfig.yml
  vars:
    _name: "{{element._name}}"
    _crt: "{{element._crt}}"
    _IP: "{{KUBERNETES_PUBLIC_ADDRESS}}"
  loop:
    - {_name: 'monit',_crt: "monit"}
  loop_control:
    loop_var: element

- name: Download files
  ansible.builtin.get_url:
    url: "https://github.com/prometheus/prometheus/releases/download/v{{prometheus['version']}}/prometheus-{{prometheus['version']}}.{{prometheus['platform']}}.tar.gz"
    dest: "{{prometheus['path']}}/"
    mode: 'u=rwx,g=rx,o=rx'
    checksum: "{{prometheus['hash']}}"

- name: unarchive prometheus
  ansible.builtin.unarchive:
    src: "{{prometheus['path']}}/prometheus-{{prometheus['version']}}.{{prometheus['platform']}}.tar.gz"
    dest: "{{prometheus['path']}}/"
    remote_src: yes


- name: Creates directory /etc/prometheus/
  file:
    path: /etc/prometheus/
    state: directory
    owner: root
    group: root
    mode: '0700'


- name: Creates directory /var/lib/prometheus
  file:
    path: /var/lib/prometheus
    state: directory
    owner: root
    group: root
    mode: '0700'

- name: "[prometheus] configuration file"
  template:
    src: "prometheus.yml"
    dest: "/etc/prometheus/prometheus.yml"
  notify: Restart-Prometheus


- name: Template a file to prometheus
  ansible.builtin.copy:
    src: prometheus.service
    dest: /etc/systemd/system/prometheus.service
  notify: Restart-Prometheus

- name: Enable service prometheus
  ansible.builtin.systemd:
    name: prometheus
    enabled: true
    daemon_reload: true
    state: started
