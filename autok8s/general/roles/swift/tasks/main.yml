---
# tasks file for swift

- name: Ensure group "swift" exists
  ansible.builtin.group:
    name: swift
    state: present

- name: Add the user 'swift' with a specific uid and a primary group of 'swift'
  ansible.builtin.user:
    name: swift
    group: swift
    shell: /bin/bash

# Installing dependencies
- name: Install packages
  ansible.builtin.apt:
    update_cache: true
    allow_change_held_packages: true
    pkg: "{{def_soft_Debian}}"

# Configuring storage

- name: Create a new primary partition for LVM
  community.general.parted:
    device: /dev/vdb
    number: 1
    flags: [xfs]
    state: present

- name: Create a xfs filesystem on /dev/vdb1
  community.general.filesystem:
    fstype: xfs
    dev: /dev/vdb1

- name: Create a directory if it does not exist
  ansible.builtin.file:
    path: /mnt/vdb1
    state: directory
    mode: '0755'

- name: Mount up device  /dev/vdb1
  ansible.posix.mount:
    path: /mnt/vdb1
    src:  /dev/vdb1
    fstype: xfs
    state: present

# Common Post-Device Setup

- name: Create a directory if it does not exist /mnt/vdb1/1-4
  ansible.builtin.file:
    path: /mnt/vdb1/{{ item }}
    state: directory
    mode: '0755'
    owner: swift
    group: swift
  loop: [1,2,3,4]

- name: Create a directory if it does not exist /var/cache/swift1-4
  ansible.builtin.file:
    path: /var/cache/swift{{ item }}
    state: directory
    mode: '0755'
    owner: swift
    group: swift
  loop: [1,2,3,4]

- name: Create a symbolic link/ mnt/vdb1/1-4
  ansible.builtin.file:
    src: /mnt/vdb1/{{ item }}
    dest: /srv/{{ item }}
    owner: swift
    group: swift
    state: link
  loop: [1,2,3,4]

#Getting the code

- name: Git checkout python-swiftclient.git
  ansible.builtin.git:
    repo: 'https://opendev.org/openstack/python-swiftclient.git'
    dest: /opt

- name: Install specified python requirements /opt/python-swiftclient/requirements.txt
  ansible.builtin.pip:
    requirements: /opt/python-swiftclient/requirements.txt
    virtualenv: /my_app/venv

- name: Git checkout swift.git
  ansible.builtin.git:
    repo: 'https://github.com/openstack/swift.git'
    dest: /opt

- name: Install specified python requirements /opt/swift/requirements.txt
  ansible.builtin.pip:
    requirements: /opt/swift/requirements.txt
    virtualenv: /my_app/venv

#Setting up rsync

- name: Template a file to /etc/swift/account-server/1.conf
  ansible.builtin.template:
    src: rsyncd.conf.j2
    dest: /etc/rsyncd.conf
    owner: swift
    group: swift
    mode: '0644'

- name: Ensure RSYNC_ENABLE=true

  ansible.builtin.lineinfile:
    path: /etc/default/rsync
    regexp: '^RSYNC_ENABLE='
    line: RSYNC_ENABLE=true


- name: Restart service rsyncd, in all cases
  ansible.builtin.service:
    name: rsyncd
    state: restart
    enabled: yes

#Starting memcached

- name: Restart service memcached, in all cases
  ansible.builtin.service:
    name: memcached
    state: restart
    enabled: yes

#Optional: Setting up rsyslog for individual logging

#Configuring each node

- name: Template a file to /etc/swift/swift.conf
  ansible.builtin.template:
    src: swift.conf.j2
    dest: /etc/swift/swift.conf
    owner: swift
    group: swift
    mode: '0644'

- name: Template a file to /etc/swift/proxy-server.conf
  ansible.builtin.template:
    src: proxy-server.conf.j2
    dest: /etc/swift/proxy-server.conf
    owner: swift
    group: swift
    mode: '0644'

- name: Template a file to /etc/swift/object-expirer.conf
  ansible.builtin.template:
    src: object-expirer.conf.j2
    dest: /etc/swift/object-expirer.conf
    owner: swift
    group: swift
    mode: '0644'

- name: Template a file to /etc/swift/container-sync-realms.conf
  ansible.builtin.template:
    src: container-sync-realms.conf.j2
    dest: /etc/swift/container-sync-realms.conf
    owner: swift
    group: swift
    mode: '0644'

- name: block loop 1-4
  block:
    - name: Template a file to account-server
      ansible.builtin.template:
        src: account-server_n.conf
        dest: /etc/swift/account-server/{{item}}.conf
        owner: swift
        group: swift
        mode: '0644'
      loop: [1,2,3,4]

    - name: Template a file to container-server
      ansible.builtin.template:
        src: container-server_n.conf
        dest: /etc/swift/container-server/{{item}}.conf
        owner: swift
        group: swift
        mode: '0644'
      loop: [1,2,3,4]

    - name: Template a file to container-reconciler
      ansible.builtin.template:
        src: container-reconciler_n.conf
        dest: /etc/swift/container-reconciler/{{item}}.conf
        owner: swift
        group: swift
        mode: '0644'
      loop: [1,2,3,4]

    - name: Template a file to object-server
      ansible.builtin.template:
        src: object-server_n.conf
        dest: /etc/swift/object-server/{{item}}.conf
        owner: swift
        group: swift
        mode: '0644'
      loop: [1,2,3,4]



#Setting up scripts for running Swift

#Configure environment variables for Swift

#Constructing initial rings
